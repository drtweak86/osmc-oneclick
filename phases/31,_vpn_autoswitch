#!/usr/bin/env bash
set -euo pipefail
log(){ echo -e "[oneclick][31_autoswitch] $*"; }

CONF_DIR="/etc/wireguard"
LOG="/var/log/wg-autoswitch.log"
mkdir -p "$(dirname "$LOG")"

log "Starting VPN auto-switch check" | tee -a "$LOG"

best_conf=""
best_ping_ms=999999

shopt -s nullglob
for conf in "$CONF_DIR"/*.conf; do
  name="$(basename "${conf%.conf}")"

  # Extract Endpoint host safely
  endpoint_line="$(grep -E '^[[:space:]]*Endpoint[[:space:]]*=' "$conf" || true)"
  [ -n "$endpoint_line" ] || { log "Skipping $name (no Endpoint= in conf)"; continue; }

  endpoint="${endpoint_line#*=}"
  endpoint="$(echo "$endpoint" | xargs)"               # trim
  host="${endpoint%%:*}"                               # host part before :
  [ -n "$host" ] || { log "Skipping $name (empty host)"; continue; }

  # Ensure the host resolves
  if ! getent ahostsv4 "$host" >/dev/null 2>&1; then
    log "Skipping $name ($host does not resolve)"
    continue
  fi

  # 3 ICMP pings, parse avg RTT
  rtt="$(ping -c3 -q "$host" 2>/dev/null | awk -F'/' '/^rtt|^round-trip/ {print $5}')"
  if [[ -z "$rtt" ]]; then
    log "Skipping $name (ping failed)"
    continue
  fi

  # rtt may be decimal; compare numerically by scaling
  rtt_scaled="$(awk -v v="$rtt" 'BEGIN{printf("%d", v*1000)}')"
  log "Measured $name ($host): avg ${rtt} ms" | tee -a "$LOG"

  if (( rtt_scaled < best_ping_ms )); then
    best_ping_ms="$rtt_scaled"
    best_conf="$name"
  fi
done

if [[ -z "${best_conf}" ]]; then
  log "No valid VPN endpoints found; leaving current state as-is" | tee -a "$LOG"
  exit 1
fi

best_human="$(awk -v v="$best_ping_ms" 'BEGIN{printf("%.2f", v/1000)}')"
log "Fastest endpoint: ${best_conf} (${best_human} ms)" | tee -a "$LOG"

# Bring any existing tunnels down
for ifc in $(wg show interfaces 2>/dev/null || true); do
  wg-quick down "$ifc" || true
done

# Connect to the best one
if wg-quick up "$best_conf"; then
  log "Connected to $best_conf" | tee -a "$LOG"
else
  log "Failed to bring up $best_conf" | tee -a "$LOG"
  exit 1
fi
